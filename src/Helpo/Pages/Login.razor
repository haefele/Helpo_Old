@using InputType = MudBlazor.InputType
@using Helpo.Shared.Commands

@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject AuthService AuthService

@page "/Login"

<MudContainer MaxWidth="MaxWidth.Small">
    <MudForm>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Login</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudTextField T="string"
                              Label="Username"
                              Disabled="@LoginCommand.IsExecuting"
                              Immediate="true"
                              HelperText="Enter your username"
                              Adornment="Adornment.End"
                              AdornmentIcon="@Icons.Material.Person"
                              OnKeyUp="@OnKeyUp"
                              @bind-Value="@_username"/>

                <MudTextField T="string"
                              Label="Password"
                              Disabled="@LoginCommand.IsExecuting"
                              Immediate="true"
                              HelperText="Enter your password"
                              Adornment="Adornment.End"
                              AdornmentIcon="@(this._showPassword ? Icons.Material.Visibility : Icons.Material.VisibilityOff)"
                              OnAdornmentClick="@(() => this._showPassword = !this._showPassword)"
                              InputType="@(this._showPassword ? InputType.Text : InputType.Password)"
                              OnKeyUp="@OnKeyUp"
                              @bind-Value="@_password"/>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled"
                           StartIcon="@Icons.Material.Login"
                           Color="Color.Primary"
                           Class="ml-auto"
                           Command="@LoginCommand"
                           Disabled="@(!LoginCommand.CanExecute)">Login</MudButton>
            </MudCardActions>
        </MudCard>
    </MudForm>
    
    @if (LoginCommand.IsExecuting)
    {
        <MudProgressLinear Indeterminate="true" Color="Color.Primary" />
    }
</MudContainer>

@code {
    #nullable enable

    private bool _showPassword = false;
    private string? _username = null;
    private string? _password = null;

    protected override void OnInitialized()
    {
        this.LoginCommand = HelpoCommand.Async(this.TryLogin).CanExecute(this.CanLogin).Component(this.StateHasChanged).Snackbar(this.Snackbar);
    }

    private void OnKeyUp(KeyboardEventArgs obj)
    {
        if (string.Equals(obj.Key, "enter", StringComparison.OrdinalIgnoreCase))
            this.LoginCommand.Execute();
    }

    private HelpoCommand LoginCommand { get; set; } = default!;
    private bool CanLogin()
    {
        return string.IsNullOrWhiteSpace(this._username) == false && 
               string.IsNullOrWhiteSpace(this._password) == false;
    }
    private async Task TryLogin()
    {
        var ticket = await this.AuthService.LoginAsync(this._username, this._password);
        this.Snackbar.Add("Login successful.", Severity.Success);
        
        this.NavigationManager.NavigateTo($"/signin?ticket={ticket}", forceLoad: true); // The AuthController will finalize the login process
    }
}