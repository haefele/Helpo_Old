@using InputType = MudBlazor.InputType
@using Helpo.Shared.Commands

@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager
@inject AuthService AuthService

@page "/Login"

<MudContainer MaxWidth="MaxWidth.Small">
    <MudForm>
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h5">Login</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudTextField T="string"
                              Label="Username"
                              Disabled="@LoginCommand.IsExecuting"
                              Immediate="true"
                              HelperText="Enter your username"
                              @bind-Value="@Username"/>

                <MudTextField T="string"
                              Label="Password"
                              Disabled="@LoginCommand.IsExecuting"
                              Immediate="true"
                              HelperText="Enter your password"
                              InputType="InputType.Password"
                              @bind-Value="@Password"/>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Filled"
                           StartIcon="@Icons.Material.Login"
                           Color="Color.Primary"
                           Style="margin-left: auto"
                           Command="@LoginCommand"
                           Disabled="@(!LoginCommand.CanExecute)">Login</MudButton>
            </MudCardActions>
        </MudCard>
    </MudForm>
    
    @if (LoginCommand.IsExecuting)
    {
        <MudProgressLinear Indeterminate="true" Color="Color.Primary" />
    }
</MudContainer>

@code {
    #nullable enable
    
    public string? Username { get; set; }
    public string? Password { get; set; }

    public HelpoCommand LoginCommand { get; private set; } = default!;

    protected override void OnInitialized()
    {
        this.LoginCommand = HelpoCommand.Async(this.TryLogin).CanExecute(this.CanLogin).Component(this.StateHasChanged).Snackbar(this.Snackbar);
    }

    private bool CanLogin()
    {
        return string.IsNullOrWhiteSpace(this.Username) == false && 
               string.IsNullOrWhiteSpace(this.Password) == false;
    }
    private async Task TryLogin()
    {
        await Task.Delay(TimeSpan.FromSeconds(2));

        var ticket = await this.AuthService.LoginAsync(this.Username, this.Password);
        this.NavigationManager.NavigateTo($"/signin?ticket={ticket}", forceLoad: true); // The AuthController will finalize the login process
    }
}